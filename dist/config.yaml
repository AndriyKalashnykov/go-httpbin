project_name: consumer
env:
  - GO111MODULE=on
release:
  github:
    owner: AndriyKalashnykov
    name: go-httpbin
  name_template: '{{.Tag}}'
builds:
  - id: go-httpbin
    goos:
      - linux
    goarch:
      - amd64
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - linux_amd64_v1
    dir: .
    main: ./cmd/httpbin/main.go
    binary: go-httpbin
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -extldflags "-lc -lrt -lpthread --static"
      - -s -w -X main.version={{ .Version }}
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=1
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
  - id: go-httpbin-linux-arm64
    goos:
      - linux
    goarch:
      - arm64
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - linux_arm64
    dir: .
    main: ./cmd/httpbin/main.go
    binary: go-httpbin
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -extldflags "-lc -lrt -lpthread --static"
      - -s -w -X main.version={{ .Version }}
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=1
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
  - id: go-httpbin-darwin-amd64
    goos:
      - darwin
    goarch:
      - amd64
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - darwin_amd64_v1
    dir: .
    main: ./cmd/httpbin/main.go
    binary: go-httpbin
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -s -w -X main.version={{ .Version }}
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=1
      - CC=o64-clang
      - CXX=o64-clang++
  - id: go-httpbin-darwin-arm64
    goos:
      - darwin
    goarch:
      - arm64
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - darwin_arm64
    dir: .
    main: ./cmd/httpbin/main.go
    binary: go-httpbin
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -s
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=1
      - CC=oa64-clang
      - CXX=oa64-clang++
  - id: go-httpbin-windows-amd64
    goos:
      - windows
    goarch:
      - amd64
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - windows_amd64_v1
    dir: .
    main: ./cmd/httpbin/main.go
    binary: go-httpbin
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser
    flags:
      - -trimpath
      - -buildmode=exe
    env:
      - CGO_ENABLED=1
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
archives:
  - id: consumer
    name_template: '{{ .ProjectName }}_v{{ .Version }}_{{ .Os }}_{{ .Arch }}{{if .Arm}}_{{.Arm}}{{end}}'
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - src: README.md
nfpms:
  - file_name_template: '{{ .ProjectName }}_v{{ .Version }}_{{ .Os }}_{{ .Arch }}{{if .Arm}}_{{.Arm}}{{end}}'
    package_name: consumer
    id: default
    builds:
      - go-httpbin
    formats:
      - apk
      - deb
      - rpm
    vendor: AndriyKalashnykov
    homepage: https://github.com/andriykalashnykov/go-httpbin
    maintainer: Andriy Kalashnykov <andriykalashnykov@gmail.com>
    description: go-httpbin
    license: GPL-3.0
    bindir: /usr/bin
snapshot:
  name_template: '{{ .Version }}-SNAPSHOT-{{ .ShortCommit }}'
checksum:
  name_template: checksums.txt
  algorithm: sha256
changelog:
  filters:
    exclude:
      - '^test:'
      - ^chore
      - merge conflict
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
  sort: asc
  use: github
  groups:
    - title: Dependency updates
      regexp: ^.*?(feat|fix)\(deps\)!?:.+$
      order: 300
    - title: New Features
      regexp: ^.*?feat(\([[:word:]]+\))??!?:.+$
      order: 100
    - title: Bug fixes
      regexp: ^.*?fix(\([[:word:]]+\))??!?:.+$
      order: 200
    - title: Documentation updates
      regexp: ^.*?doc(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: Other work
      order: 9999
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod download
    - go generate ./...
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ .ProjectName }} {{ mdv2escape .Tag }} is out! Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
